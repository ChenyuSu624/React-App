{"version":3,"sources":["actions/ActionID/actionID.js","actions/NavAction/navAction.js","actions/TempleteAction/templeteAction.js","containers/sidebar/sideBar.js","actions/HeaderAction/headerAction.js","containers/header/index.js","components/contentlist/Colors/colors.js","components/CodeBlock.js","components/index.js","components/contentlist/Iconography/iconograpy.js","components/contentlist/Home/home.js","components/contentlist/Error/error.js","components/templete/index.js","components/contentlist/Components/Buttons/buttons.js","components/contentlist/Components/Tables/tables.js","components/contentlist/Components/Spinner/spinner.js","components/contentlist/Components/Progress/progress.js","components/contentlist/Components/MessageBar/messageBar.js","components/contentlist/Components/Dialog/dialog.js","components/contentlist/Components/Notification/notification.js","components/contentlist/Components/SearchField/searchField.js","components/contentlist/Charts/Line/line.js","components/contentlist/Charts/CircularGridLine/circularGridLine.js","components/contentlist/Charts/VerticalBar/verticalBar.js","components/contentlist/Charts/Area/area.js","components/contentlist/Charts/Pie/pie.js","components/contentlist/Charts/Scatterplot/scatterplot.js","components/contentlist/Components/Avatar/avatar.js","components/contentlist/Components/Markdown/markdown.js","actions/AppAction/appAction.js","containers/index.js","serviceWorker.js","reducers/data.js","reducers/headerReducer.js","reducers/appReducer.js","reducers/navReducer.js","reducers/rootReducer.js","index.js"],"names":["oneState","type","Action","bool","event","value","DynamicSideBar","resetTabView","props","resetValue","this","showSublist","node","MyIcon","Icons","icon","subNavItems","listItems","loopSubItems","expand","undefined","state","label","window","location","hash","indexOf","url","setState","key","ListItem","button","onClick","openSubList","ListItemIcon","ListItemText","primary","Divider","Collapse","in","timeout","unmountOnExit","List","component","exact","to","activeClassName","list","output","i","push","renderNavItem","data","listLoop","React","Component","connect","navReducer","dispatch","NavAction","TempleteAction","Header","handleClick","showRightMenu","handleClose","closeRightMenu","content","menu","href","link","target","rel","MenuItem","className","AppBar","Toolbar","SideBarOpen","Typography","variant","listOpenState","anchorEl","headerReducer","rightContent","HomeAction","MyColor","src","title","CodeBlock","language","style","dark","PureComponent","defaultProps","MyIconography","onSelect","selected","renderOneIcon","renderDialog","SingleIcon","string","code","source","renderers","Dialog","open","onClose","DialogTitle","id","DialogContent","Button","color","oneIcon","Paper","elevation","MyHome","Error","MyTemplete","handleChange","switchTabs","position","Tabs","onChange","Tab","name","sampleUsage","MyButtons","disabled","size","renderButton","CustomTableCell","withStyles","theme","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","createData","calories","fat","carbs","protein","rows","root","width","paddingTop","spacing","unit","paddingBottom","overflowX","table","minWidth","row","grey","classes","Table","TableHead","TableRow","align","TableBody","map","scope","progress","margin","CircularProgress","flexGrow","padding","LinearProgress","justifyContent","marginTop","marginBottom","display","snackbar1","snackbar2","SnackbarContent","message","MyDialog","handleClickOpen","aria-labelledby","aria-describedby","DialogContentText","DialogActions","autoFocus","renderNotification","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","green","amber","iconVariant","opacity","marginRight","alignItems","other","Icon","classNames","action","IconButton","aria-label","close","MyNotification","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","input","marginLeft","flex","iconButton","divider","height","Avatar","InputBase","placeholder","MyLine","Bottom","top","yDomain","xDomain","x","y","renderLine","MyCircularGridLine","r","theta","Math","PI","bottom","left","right","strokeWidth","sizeRange","cos","sin","renderCircular","MyVerticalBar","xType","renderBar","MyArea","curve","renderArea","MyPie","angle","showLabels","renderPie","MyScatterplot","renderScatterplot","MyAvatar","renderAvatar","MyMarkdown","buildString","renderMarkdown","App","handleNavOpen","leftMenuOpen","leftOpen","path","MyTables","MySpinner","MyProgress","MyMessageBar","MySearchField","appReducer","AppAction","Boolean","hostname","match","navItems","BASE_URL","rightMenu","initState","Data","currentTarget","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85209cbd.chunk.js","sourcesContent":["/*\r\nIntegrate all action IDs in this file\r\n*/\r\n\r\nconst SHOW_LEFT_MENU = \"Show_Left_Menu\";\r\nconst SHOW_RIGHT_MENU = \"Show_Right_Menu\";\r\nconst CLOSE_RIGHT_MENU = \"Close_Right_Menu\";\r\nconst SHOW_SUBLIST = \"Show_Sublist\";\r\nconst SET_STATE = \"Set_State\";\r\nconst SWITCH_TABS = \"Switch_Tabs\";\r\nconst RESET_TABS_VALUE = \"Reset_Tabs_Value\";\r\n\r\n\r\nexport default {SHOW_LEFT_MENU, SHOW_RIGHT_MENU, CLOSE_RIGHT_MENU, SHOW_SUBLIST, SET_STATE, SWITCH_TABS, RESET_TABS_VALUE};\r\n","import Action from \"../ActionID/actionID.js\";\r\n\r\nconst ShowSublist = (oneState) =>{\r\n  return{\r\n    type: Action.SHOW_SUBLIST,\r\n    oneState: oneState\r\n  };\r\n};\r\n\r\nconst SetState = (oneState,bool) =>{\r\n  return{\r\n    type: Action.SET_STATE,\r\n    oneState: oneState,\r\n    bool: bool\r\n  };\r\n};\r\n\r\n\r\nexport default {ShowSublist, SetState};\r\n","/*\r\nAction(s):\r\n\r\nTo toggle central display tab (change tab values)\r\n*/\r\n\r\nimport Action from \"../ActionID/actionID.js\";\r\n\r\nconst SwitchTabs = (event, value) =>{\r\n  return{\r\n    type: Action.SWITCH_TABS,\r\n    event: event,\r\n    value: value\r\n  };\r\n};\r\n\r\nconst ResetValue = () =>{\r\n  return{\r\n    type: Action.RESET_TABS_VALUE\r\n  };\r\n};\r\n\r\nexport default {SwitchTabs, ResetValue};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as Icons from '@material-ui/icons';\r\nimport {connect} from 'react-redux';\r\nimport NavAction from '../../actions/NavAction/navAction.js';\r\nimport TempleteAction from '../../actions/TempleteAction/templeteAction.js'\r\n\r\nclass DynamicSideBar extends React.Component\r\n{\r\n  openSubList(oneState,bool){\r\n   this.props.showSublist(oneState,bool);\r\n }\r\n\r\n resetTabView = () =>{\r\n   this.props.resetValue();\r\n };\r\n\r\n  renderNavItem(node)\r\n  {\r\n    const MyIcon = Icons[node.icon];\r\n    if(node.subNavItems)\r\n    {\r\n      let listItems = this.loopSubItems(node.subNavItems);\r\n      const expand = this.props.state[node.label] === undefined? \r\n      window.location.hash.indexOf(node.url) > -1\r\n      : this.props.state[node.label];\r\n      this.props.setState(node.label,expand);\r\n        return(\r\n          <div key = {node.label}>\r\n            <ListItem button onClick={()=>{this.openSubList(node.label,expand)}}>\r\n              <ListItemIcon>\r\n                <MyIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={node.label} />\r\n              {expand?<Icons.ExpandLess/> : <Icons.ExpandMore/>}\r\n            </ListItem>\r\n            <Divider />\r\n            <Collapse in={expand} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\">\r\n             {listItems}\r\n            </List>\r\n            </Collapse>\r\n\r\n          </div>\r\n      );\r\n    }\r\n    else\r\n    {\r\n      return(\r\n        <div key={node.label}>\r\n          <NavLink exact = {node.url === '/'} to={node.url} activeClassName=\"on-click\">\r\n            <ListItem button onClick = {this.resetTabView}>\r\n              <ListItemIcon>\r\n                <MyIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={node.label}/>\r\n            </ListItem>\r\n            </NavLink>\r\n          <Divider />\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  listLoop(list)\r\n  {\r\n    let output = [];\r\n    for(let i in list)\r\n    {\r\n      output.push(this.renderNavItem(list[i]));\r\n    }\r\n    return(\r\n      <div>\r\n      {output}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  loopSubItems(list)\r\n  {\r\n    let listItems = []\r\n    for(let i in list)\r\n      {\r\n        listItems.push(this.renderNavItem(list[i]));\r\n      }\r\n    return listItems;\r\n  }\r\n  render()\r\n  {\r\n    const { data } = this.props;\r\n    return(\r\n      <div>\r\n        {this.listLoop(data)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    data: state.navReducer.data,\r\n    state: state.navReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) =>{\r\n  return{\r\n    showSublist: (oneState) => {dispatch(NavAction.ShowSublist(oneState))},\r\n    setState: (oneState,bool) => {dispatch(NavAction.SetState(oneState, bool))},\r\n    resetValue: () => {dispatch(TempleteAction.ResetValue())}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchtoProps)(DynamicSideBar);\r\n","import Action from \"../ActionID/actionID.js\";\r\n\r\nconst ShowRightMenu = (event) =>{\r\n  return{\r\n    type: Action.SHOW_RIGHT_MENU,\r\n    event: event\r\n  };\r\n};\r\n\r\nconst CloseRightMenu = () => {\r\n  return{\r\n    type: Action.CLOSE_RIGHT_MENU,\r\n  };\r\n};\r\n\r\nexport default {ShowRightMenu, CloseRightMenu};\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport List from '@material-ui/core/List';\r\nimport DynamicSideBar from '../sidebar/sideBar'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport {connect} from 'react-redux';\r\nimport HomeAction from '../../actions/HeaderAction/headerAction';\r\n\r\nclass Header extends React.Component\r\n{\r\n  handleClick = (event) => {\r\n    this.props.showRightMenu(event);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.closeRightMenu();\r\n  };\r\n\r\n  loopMenu(content)\r\n  {\r\n    let menu = [];\r\n    for( let i in content)\r\n    {\r\n      menu.push(<a href={content[i].link} key = {content[i].label}target=\"_blank\" rel=\"noopener noreferrer\"><MenuItem key = {content[i].label}>{content[i].label}</MenuItem></a>);\r\n    }\r\n    return(\r\n      <div>\r\n        {menu}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div className = \"root\">\r\n        <AppBar className=\"appbar\">\r\n\r\n          <Toolbar className = \"toolbar\">\r\n            <div>\r\n            <ListItem button onClick={()=>{this.props.SideBarOpen()}} >\r\n              <ListItemIcon>\r\n                <MenuIcon />\r\n              </ListItemIcon>\r\n            </ListItem>\r\n            </div>\r\n\r\n            <Typography variant=\"h6\" className = \"grow\">\r\n              <span className = \"titleColor\">Design System</span>\r\n            </Typography>\r\n\r\n          </Toolbar>\r\n\r\n        </AppBar>\r\n\r\n\r\n        <div>\r\n        <List>\r\n          <Collapse in={this.props.listOpenState} timeout=\"auto\" unmountOnExit>\r\n            <div className=\"list\">\r\n            <List component=\"div\">\r\n              <DynamicSideBar/>\r\n            </List>\r\n            </div>\r\n          </Collapse>\r\n        </List>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    anchorEl: state.headerReducer.anchorEl,\r\n    rightContent: state.headerReducer.rightContent\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) =>{\r\n  return{\r\n    showRightMenu: (event) => {dispatch(HomeAction.ShowRightMenu(event))},\r\n    closeRightMenu: () => {dispatch(HomeAction.CloseRightMenu())}\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchtoProps)(Header);\r\n","import React from 'react'\r\nclass MyColor extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"iframe-display\">\r\n      <iframe className=\"iframe\" src=\"https://materialuicolors.co/\" title=\"color\">\r\n      </iframe>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MyColor\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\nclass CodeBlock extends PureComponent {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: null\r\n  };\r\n\r\n  render() {\r\n    const { language, value } = this.props;\r\n    return (\r\n      <SyntaxHighlighter language={language || 'javascript'} style={dark}>\r\n        {value}\r\n      </SyntaxHighlighter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;\r\n","import CodeBlock from './CodeBlock';\r\n\r\n// export all components, Icons, Charts\r\nexport * from '@material-ui/core/';\r\nexport default CodeBlock;\r\n","import React from 'react';\r\nimport * as Icons from '@material-ui/icons';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport CodeBlock from '../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\n\r\nclass MyIconography extends React.Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      selected : null\r\n    };\r\n  }\r\n\r\n  onSelect=(key)=>\r\n  {\r\n    this.setState({selected: key});\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ selected: null });\r\n  };\r\n\r\n\r\n  renderOneIcon = (icon)=>\r\n  {\r\n    let MyIcon = Icons[icon];\r\n    return(\r\n        <li className = \"one-icon-display\" onClick={()=>this.onSelect(icon)} key = {icon}>\r\n          <MyIcon />\r\n        </li>\r\n    );\r\n  }\r\n\r\n  renderDialog=()=>\r\n  {\r\n    const {selected} = this.state;\r\n    if(!selected) return;\r\n    const SingleIcon = Icons[selected];\r\n    const string = `\r\n    import {Icons} from '@material-ui/icons/';\r\n    const IconComponent = Icons['${selected}'];\r\n    return <div><IconComponent /></div>;\r\n    `;\r\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n    return(\r\n      <Dialog open={!!selected} onClose={this.handleClose}>\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {selected}\r\n          {\" Icon \"}\r\n          <SingleIcon/>\r\n          {\" Sample  Usage\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {code}\r\n        </DialogContent>\r\n\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  render()\r\n  {\r\n    let output = [];\r\n    for(let oneIcon in Icons)\r\n    {\r\n      output.push(this.renderOneIcon(oneIcon));\r\n    }\r\n    return(\r\n      <div >\r\n        <Paper className = \"icon-paper\" elevation = {20}>\r\n          <h1 className = \"icon-title\">Click on Icons to Check Sample Usage</h1>\r\n          <ul className = \"icons-display\">{output}</ul>\r\n          {this.renderDialog()}\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default MyIconography;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nclass MyHome extends React.Component\r\n{\r\n  render() {\r\n    return (\r\n      <Paper className = \"home\" elevation = {20}>\r\n        <div>\r\n        <h1 className = \"title\">Welcome</h1>\r\n        </div>\r\n        <br/>\r\n        <div className = \"text\">\r\n          <h1>This is a react-redux project using material ui.</h1>\r\n        </div>\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\nexport default MyHome\r\n","import React from 'react'\r\nclass Error extends React.Component\r\n{\r\n  render() {\r\n    return (\r\n      <div className = \"not-found\">\r\n        <h1>ERROR 404!</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Error\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {connect} from 'react-redux';\r\nimport TempleteAction from '../../actions/TempleteAction/templeteAction.js'\r\n\r\n\r\nclass MyTemplete extends React.Component\r\n{\r\n  handleChange = (event, value) => {\r\n    this.props.switchTabs(event, value);\r\n  };\r\n\r\n  resetTabView = () =>{\r\n    this.props.resetValue();\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.props;\r\n    return (\r\n      <div className = \"root\">\r\n        <Paper className=\"paper\" elevation = {20}>\r\n          <AppBar position=\"static\" className=\"templete-appbar\">\r\n            <div className = \"tab-content\">\r\n            <Tabs value={value} onChange={this.handleChange}>\r\n              <Tab label={this.props.name}/>\r\n              <Tab label=\"Usage\" />\r\n            </Tabs>\r\n            </div>\r\n          </AppBar>\r\n          {value === 0 && this.props.content}\r\n          {value === 1 && this.props.sampleUsage}\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    value: state.navReducer.value\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) =>{\r\n  return{\r\n    switchTabs: (event, value) => {dispatch(TempleteAction.SwitchTabs(event,value))},\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchtoProps)(MyTemplete);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport MyTemplete  from '../../../templete';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nclass MyButtons extends React.Component\r\n{\r\n\r\n  renderButton()\r\n  {\r\n    return(\r\n      <div>\r\n            <br/>\r\n            <h2><b>Default</b></h2>\r\n            <div className=\"buttons\">\r\n                <Button>Default</Button>\r\n                <Button color=\"primary\">\r\n                    Primary\r\n                </Button>\r\n                <Button color=\"secondary\">\r\n                    Secondary\r\n                </Button>\r\n                <Button disabled>\r\n                    Disabled\r\n                </Button>\r\n            </div>\r\n            <h2><b>Outlined</b></h2>\r\n            <div className=\"buttons\">\r\n                <Button variant=\"outlined\">Default</Button>\r\n                <Button variant=\"outlined\" color=\"primary\">\r\n                    Primary\r\n                </Button>\r\n                <Button variant=\"outlined\" color=\"secondary\">\r\n                    Secondary\r\n                </Button>\r\n                <Button variant=\"outlined\" disabled>\r\n                    Disabled\r\n                </Button>\r\n            </div>\r\n            <h2><b>Contained</b></h2>\r\n            <div className=\"buttons\">\r\n                <Button variant=\"contained\">Default</Button>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Primary\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                    Secondary\r\n                </Button>\r\n                <Button variant=\"contained\" disabled>\r\n                    Disabled\r\n                </Button>\r\n            </div>\r\n            <h2><b>Size</b></h2>\r\n            <div className=\"buttons\">\r\n                <Button size=\"small\" variant=\"contained\">\r\n                    Small\r\n                </Button>\r\n                <Button size=\"medium\" variant=\"contained\" color=\"secondary\">\r\n                    Medium\r\n                </Button>\r\n                <Button size=\"medium\" variant=\"contained\" disabled>\r\n                    Disabled\r\n                </Button>\r\n                <Button size=\"large\" variant=\"contained\" color=\"primary\">\r\n                    Large\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  render()\r\n  {\r\n\r\n    let output = this.renderButton();\r\n    let myName = \"Button\";\r\n    let string = `\r\n    import Button from '@material-ui/core/Button';\r\n      <Button color=\"primary\" variant=\"outlined \">\r\n        Button1\r\n      </Button>\r\n      <Button color=\"secondary\" variant=\"contained\">\r\n        Button2\r\n      </Button>`;\r\n\r\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n\r\n    return(\r\n      <div>\r\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default MyButtons;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MyTemplete  from '../../../templete';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    color: theme.palette.primary.dark\r\n  },\r\n}))(TableCell);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingTop: theme.spacing.unit * 3,\r\n    paddingBottom: 20,\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  row: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.grey['100'],\r\n    },\r\n  },\r\n});\r\n\r\nlet id = 0;\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  id += 1;\r\n  return { id, name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('United States(USA)', 46, 37, 38, 121),\r\n  createData(' Great Britain (GBR)', 27, 23, 17, 67),\r\n  createData('China (CHN)', 26, 18, 26, 70),\r\n  createData('Russia (RUS)', 19, 17, 20, 56),\r\n  createData('Germany (GER)', 17, 10, 15, 42),\r\n];\r\n\r\nfunction MyTables(props) {\r\n  const { classes } = props;\r\n  let myName = \"Table\";\r\n  let output = (<Paper className={classes.root} elevation={20}>\r\n      <h1 className = \"table-title\"><b>2016 Summer Olympics Medal Table (ranked by gold metals)</b></h1>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <CustomTableCell>Nations or Regions</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Gold</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Silver</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Bronze</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Total</CustomTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow className = {classes.row} key={row.id}>\r\n              <CustomTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </CustomTableCell>\r\n              <CustomTableCell align=\"right\">{row.calories}</CustomTableCell>\r\n              <CustomTableCell align=\"right\">{row.fat}</CustomTableCell>\r\n              <CustomTableCell align=\"right\">{row.carbs}</CustomTableCell>\r\n              <CustomTableCell align=\"right\">{row.protein}</CustomTableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>);\r\n\r\n    let string = `\r\n    import Table from '@material-ui/core/Table';\r\n\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n          {Your head}\r\n          </TableRow>\r\n        </TableHead>\r\n       <TableBody>\r\n         {inputData}\r\n       </TableBody>\r\n     </Table>`;\r\n\r\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n\r\n    return(\r\n      <div>\r\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nMyTables.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MyTables);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport MyTemplete  from '../../../templete';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    margin: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\nfunction MySpinner(props) {\r\n  const { classes } = props;\r\n  let output = (<div className={classes.root}>\r\n    <CircularProgress className={classes.progress} />\r\n    <CircularProgress className={classes.progress} color=\"secondary\" />\r\n    <CircularProgress className={classes.progress} />\r\n    <CircularProgress className={classes.progress} color=\"secondary\" />\r\n    <CircularProgress className={classes.progress} />\r\n    <CircularProgress className={classes.progress} color=\"secondary\" />\r\n  </div>\r\n);\r\n  let myName = \"Spinner\";\r\n\r\n  let string = `\r\n\r\n    import CircularProgress from '@material-ui/core/LinearProgress';\r\n\r\n    function Circular(props) {\r\n    return (\r\n      <div>\r\n        <CircularProgress/>\r\n        <br />\r\n        <CircularProgress color=\"secondary\" />\r\n      </div>\r\n     );\r\n    }`;\r\n\r\n  let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n\r\n  return (\r\n    <div>\r\n    <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nMySpinner.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MySpinner);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport MyTemplete  from '../../../templete';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst styles = theme =>({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  progress: {\r\n    padding: theme.spacing.unit * 5,\r\n  },\r\n});\r\n\r\nfunction MyProgress(props) {\r\n  const { classes } = props;\r\n  let output = (<div className={classes.root}>\r\n    <LinearProgress className={classes.progress}/>\r\n    <LinearProgress className={classes.progress} color=\"secondary\" />\r\n  </div>\r\n  );\r\n  let myName = \"Progress\";\r\n  let string = `\r\n\r\n    import LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n    function LinearIndeterminate(props) {\r\n    return (\r\n      <div>\r\n        <LinearProgress />\r\n        <br />\r\n        <LinearProgress color=\"secondary\" />\r\n      </div>\r\n     );\r\n    }`;\r\n\r\n  let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n\r\n  return (\r\n    <div>\r\n    <MyTemplete content = {output} name = {myName} sampleUsage={code}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nMyProgress.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MyProgress);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport MyTemplete  from '../../../templete';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst styles = theme => ({\r\n  root:{\r\n    margin: \"auto\",\r\n    width: '100%',\r\n    justifyContent: \"Center\",\r\n    marginTop: \"50px\",\r\n    marginBottom: \"50px\",\r\n    padding: \"auto\",\r\n    display:\"flex\",\r\n  },\r\n  snackbar1: {\r\n    margin: theme.spacing.unit*3,\r\n    padding: theme.spacing.unit*2,\r\n    color: \"white\",\r\n    fontSize: 15,\r\n  },\r\n  snackbar2: {\r\n    margin: theme.spacing.unit*3,\r\n    padding: theme.spacing.unit*2,\r\n    color: \"white\",\r\n    fontSize: 15\r\n  }\r\n});\r\n\r\nfunction MyMessageBar(props) {\r\n  const { classes } = props;\r\n\r\n  let output = (\r\n    <div className = {classes.root}>\r\n      <SnackbarContent className={classes.snackbar1} message=\" Have you finished our assignment?\" />\r\n      <SnackbarContent\r\n        className={classes.snackbar2}\r\n        message={\r\n          'Still working on it. \\\r\n          And  you?'\r\n        }\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar1}\r\n        message=\"I have not either. Can professor accept late submission?\"\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar2}\r\n        message={\r\n          'No. \\\r\n          But there is one week remaining, do not be upset.'\r\n        }\r\n      />\r\n  </div>\r\n  );\r\n\r\n  let myName = \"Message Bar\";\r\n\r\n  let string = `\r\n\r\n    import SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\n    function LongTextSnackbar(props) {\r\n\r\n      return (\r\n        <div>\r\n          <SnackbarContent message=\"hello\"  />\r\n            <SnackbarContent message={your content}/>\r\n            <SnackbarContent message=\"hi\"/>\r\n        </div>\r\n      );\r\n     }`;\r\n\r\n  let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n\r\n  return (\r\n    <div>\r\n    <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nMyMessageBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MyMessageBar);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MyTemplete  from '../../../templete';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nclass MyDialog extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  renderNotification()\r\n  {\r\n    return (\r\n      <div className = \"dialog-button\">\r\n        <Button variant=\"outlined\" onClick={this.handleClickOpen}>\r\n          New Cash Back Offers ! ! Click it ! !\r\n        </Button>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Anniversary Sale is Coming\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Get up <b>25% off</b> sale items + Celebrate with an INCREASED <b>15% </b> cash back (was 2%).\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Later\r\n            </Button>\r\n            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n              Shop Now\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let myName = \"Dialog\";\r\n    let output = this.renderNotification();\r\n    let string = `\r\n\r\n    import Button from '@material-ui/core/Button';\r\n    import Dialog from '@material-ui/core/Dialog';\r\n    import DialogActions from '@material-ui/core/DialogActions';\r\n    import DialogContent from '@material-ui/core/DialogContent';\r\n    import DialogContentText from '@material-ui/core/DialogContentText';\r\n    import DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\n    <div>\r\n      <Button onClick={this.handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>\r\n      <Dialog open={this.state.open} onClose={this.handleClose} >\r\n        <DialogTitle>{\"open dialog?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Your contents\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose}>\r\n            option 1\r\n          </Button>\r\n          <Button onClick={this.handleClose} >\r\n            option 2\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n     </div>`;\r\n\r\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n    return(\r\n      <div>\r\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyDialog;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MyTemplete  from '../../../templete';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={classNames(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"white\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\n\r\nconst styles2 = theme => ({\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nclass MyNotification extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  renderNotification()\r\n  {\r\n\r\n    return(\r\n      <div>\r\n        <div className=\"button-style\">\r\n        <Button onClick={this.handleClick}>\r\n          Click View Your Reservation Status\r\n        </Button>\r\n        </div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={this.handleClose}\r\n            variant=\"success\"\r\n            message=\"Enjoy! Your reservation is completed\"\r\n          />\r\n        </Snackbar>\r\n\r\n    </div>\r\n\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    let output = this.renderNotification();\r\n    let myName = \"Notification\";\r\n    let string = `\r\n\r\n    import Button from '@material-ui/core/Button';\r\n    import Snackbar from '@material-ui/core/Snackbar';\r\n\r\n    <div>\r\n        <Button onClick={this.handleClick}>Button</Button>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          message={<span>Your message</span>}\r\n          action={[\r\n            <Button onClick={this.handleClose}>\r\n              your option\r\n            </Button>,\r\n          ]}\r\n        />\r\n       </div>`;\r\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n    return(\r\n      <div>\r\n      <MyTemplete content = {output} name = {myName} sampleUsage={code}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMyNotification.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles2)(MyNotification);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MyTemplete  from '../../../templete';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\n\r\n\r\n\r\nconst styles = {\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 500,\r\n    margin: \"auto\",\r\n    marginTop: \"50px\",\r\n    marginBottom: \"50px\",\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n    color:\"grey\",\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: \"40px\",\r\n    marginLeft: 4,\r\n    marginRight: 4,\r\n  },\r\n};\r\n\r\nfunction MySearchField(props) {\r\n  const { classes } = props;\r\n\r\n  let output = (\r\n    <Paper className={classes.root} elevation={20}>\r\n      <IconButton className={classes.iconButton} aria-label=\"Menu\">\r\n        <Avatar style={{backgroundColor: '#3E5EE1'}}>G</Avatar>\r\n      </IconButton>\r\n      <InputBase className={classes.input} placeholder=\"Search Google\" />\r\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Divider className={classes.divider} />\r\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Mic\">\r\n        <MicIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n\r\n  let myName = \"Search Field\";\r\n  let string = `\r\n    import React from 'react';\r\n    import Paper from '@material-ui/core/Paper';\r\n    import InputBase from '@material-ui/core/InputBase';\r\n    import IconButton from '@material-ui/core/IconButton';\r\n\r\n    return (\r\n      <Paper elevation={1}>\r\n        <IconButton>\r\n          <Your Icon />\r\n        </IconButton>\r\n        <InputBase placeholder=\"Your Text\" />\r\n        <IconButton>\r\n          <Your Icon />\r\n        </IconButton>\r\n      </Paper>\r\n    );`;\r\n\r\n  let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n\r\n  return (\r\n    <div>\r\n    <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nMySearchField.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MySearchField);\r\n","import React, { Component } from 'react';\r\nimport MyTemplete  from '../../../templete';\r\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, VerticalGridLines} from 'react-vis';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nclass MyLine extends Component\r\n{\r\n\r\n  renderLine()\r\n  {\r\n    const data = [\r\n      {x: 0, y: 8},\r\n      {x: 1, y: 2},\r\n      {x: 2, y: 4},\r\n      {x: 3, y: 9},\r\n      {x: 4, y: 6},\r\n      {x: 5, y: 7},\r\n      {x: 6, y: 0},\r\n      {x: 7, y: 3},\r\n      {x: 8, y: 2},\r\n      {x: 9, y: 0},\r\n      {x: 10, y: 3},\r\n      {x: 11, y: 11},\r\n      {x: 12, y: 5},\r\n      {x: 13, y: 7},\r\n      {x: 14, y: 1},\r\n      {x: 15, y: 3}\r\n    ];\r\n    return (\r\n      <div className = \"line-display\">\r\n        <XYPlot margin={{Bottom: 20, top: 30}} height={700} width= {700} yDomain={[0, 12]} xDomain={[0, 16]}>\r\n          <VerticalGridLines />\r\n          <HorizontalGridLines />\r\n          <XAxis />\r\n          <YAxis />\r\n          <LineSeries data={data} />\r\n        </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n  render()\r\n  {\r\n    let output = this.renderLine();\r\n    let myName = \"Line\";\r\n    let string = `\r\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, VerticalGridLines} from 'react-vis';\r\n\r\n    const data = [\r\n      {x: 0, y: 8},\r\n      {x: 1, y: 5},\r\n      {x: 2, y: 4},\r\n      {x: 3, y: 9},\r\n      {x: 4, y: 1},\r\n      {x: 5, y: 7},\r\n      {x: 6, y: 6},\r\n      {x: 7, y: 3},\r\n      {x: 8, y: 2},\r\n      {x: 9, y: 0}\r\n    ];\r\n    return (\r\n      <div>\r\n        <XYPlot height={500} width= {500}>\r\n          <VerticalGridLines />\r\n          <HorizontalGridLines />\r\n          <XAxis />\r\n          <YAxis />\r\n          <LineSeries data={data} />\r\n        </XYPlot>\r\n      </div>\r\n    );`;\r\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n    return(\r\n      <div>\r\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyLine;\r\n","import React, { Component } from 'react';\r\nimport MyTemplete  from '../../../templete';\r\nimport {XYPlot, XAxis, YAxis, MarkSeries, CircularGridLines} from 'react-vis';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nclass MyCircularGridLine extends Component\r\n{\r\n\r\n  renderCircular()\r\n  {\r\n    const data = [\r\n      {r: 1, theta: Math.PI / 3, size: 8},\r\n      {r: 2, theta: (2 * Math.PI) / 3, size: 10},\r\n      {r: 2.5, theta: Math.PI, size: 5},\r\n      {r: 3, theta: (9 * Math.PI) / 5, size: 12},\r\n      {r: 4, theta: Math.PI / 4, size: 5},\r\n      {r: 6, theta: (6 * Math.PI) / 4, size: 10},\r\n      {r: 5, theta: Math.PI / 3, size: 5},\r\n      {r: 8, theta: (2 * Math.PI) , size: 15},\r\n      {r: 8.5, theta: Math.PI, size: 15},\r\n      {r: 9.2, theta: (7 * Math.PI) / 4, size: 12},\r\n      {r: 10, theta: Math.PI / 4, size: 5},\r\n      {r: 6, theta: (4 * Math.PI) / 3, size: 15},\r\n      {r: 10, theta: (5 *Math.PI) / 4, size: 15},\r\n      {r: 8, theta: (4 * Math.PI) / 3 , size: 10},\r\n      {r: 7.7, theta: (4 * Math.PI) /5, size: 9},\r\n      {r: 9.5, theta: (3* Math.PI) / 2, size: 12},\r\n      {r: 8, theta: (Math.PI) / 2, size: 15},\r\n    ];\r\n\r\n    const margin = {\r\n      top: 20,\r\n      bottom: 20,\r\n      left: 20,\r\n      right: 20\r\n    };\r\n\r\n    const WIDTH = 600;\r\n    const HEIGHT = 600;\r\n\r\n    return (\r\n      <div className = \"circular-display\">\r\n        <XYPlot\r\n        margin={margin}\r\n        xDomain={[-10, 10]}\r\n        yDomain={[-10, 10]}\r\n        width={WIDTH}\r\n        height={HEIGHT}\r\n        >\r\n        <CircularGridLines />\r\n        <XAxis top={(HEIGHT - margin.top) / 2} />\r\n        <YAxis left={(WIDTH - margin.left - margin.right) / 2} />\r\n        <MarkSeries\r\n          strokeWidth={2}\r\n          sizeRange={[5, 15]}\r\n          data={data.map(row => ({\r\n            ...row,\r\n            x: Math.cos(row.theta) * row.r,\r\n            y: Math.sin(row.theta) * row.r\r\n          }))}\r\n        />\r\n      </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n  render()\r\n  {\r\n    let output = this.renderCircular();\r\n    let myName = \"Circular Grid Line\";\r\n    let string = `\r\n    import {XYPlot, XAxis, YAxis, MarkSeries, CircularGridLines} from 'react-vis';\r\n\r\n    renderCircular()\r\n    {\r\n      const data = [\r\n        {r: 1, theta: Math.PI / 2, size: 10},\r\n        {r: 2, theta: (3 * Math.PI) / 2, size: 15},\r\n        {r: 2.5, theta: Math.PI, size: 5},\r\n        {r: 3, theta: (8 * Math.PI) / 5, size: 5},\r\n      ];\r\n\r\n      const WIDTH = 300;\r\n      const HEIGHT = 300;\r\n\r\n      return (\r\n        <div>\r\n          <XYPlot\r\n          margin={margin}\r\n          xDomain={[-4, 4]}\r\n          yDomain={[-4, 4]}\r\n          width={WIDTH}\r\n          height={HEIGHT}\r\n          >\r\n          <CircularGridLines />\r\n          <XAxis top={(HEIGHT) / 2} />\r\n          <YAxis left={(WIDTH) / 2} />\r\n          <MarkSeries\r\n            strokeWidth={2}\r\n            sizeRange={[5, 15]}\r\n            data={data.map(row => ({\r\n              ...row,\r\n              x: Math.cos(row.theta) * row.r,\r\n              y: Math.sin(row.theta) * row.r\r\n            }))}\r\n          />\r\n        </XYPlot>\r\n        </div>\r\n      );\r\n    }\r\n    `;\r\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n    return(\r\n      <div>\r\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyCircularGridLine;\r\n","import React, { Component } from 'react';\r\nimport MyTemplete  from '../../../templete';\r\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\nclass MyVerticalBar extends Component\r\n{\r\n\r\n  renderBar()\r\n  {\r\n    const data1 = [\r\n      {x: 'Apple', y: 27},\r\n      {x: 'Banana', y: 12},\r\n      {x: 'Orange', y: 19},\r\n      {x: 'Peach', y: 9},\r\n      {x: 'Lime', y: 22}\r\n    ];\r\n\r\n    const data2 = [\r\n      {x: 'Apple', y: 20},\r\n      {x: 'Banana', y: 23},\r\n      {x: 'Orange', y: 6},\r\n      {x: 'Peach', y: 15},\r\n      {x: 'Lime', y: 19}\r\n    ];\r\n\r\n    return (\r\n      <div className = \"bar-display\">\r\n        <XYPlot margin={{left: 70, top: 20}} xType=\"ordinal\" width={700} height={700} yDomain={[0, 30]}>\r\n          <VerticalGridLines />\r\n          <HorizontalGridLines />\r\n          <XAxis  />\r\n          <YAxis />\r\n          <VerticalBarSeries\r\n            data={data1}\r\n          />\r\n          <VerticalBarSeries\r\n            data={data2}\r\n          />\r\n        </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n  render()\r\n  {\r\n    let output = this.renderBar();\r\n    let myName = \"Bar\";\r\n    let string = `\r\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,VerticalBarSeries} from 'react-vis';\r\n\r\n    const data1 = [\r\n      {x: 'Apple', y: 10},\r\n      {x: 'Banana', y: 12},\r\n      {x: 'Orange', y: 4},\r\n    ];\r\n\r\n    const data2 = [\r\n      {x: 'Apple', y: 18},\r\n      {x: 'Banana', y: 15},\r\n      {x: 'Orange', y: 7},\r\n    ];\r\n\r\n    return (\r\n      <XYPlot margin={{left: 70}} xType=\"ordinal\" width={500} height={500} yDomain={[0, 30]}>\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <XAxis  />\r\n        <YAxis />\r\n        <VerticalBarSeries\r\n          data={data1}\r\n        />\r\n        <VerticalBarSeries\r\n          data={data2}\r\n        />\r\n      </XYPlot>\r\n    )\r\n    `;\r\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n    return(\r\n      <div>\r\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyVerticalBar;\r\n","import React, { Component } from 'react';\r\nimport MyTemplete  from '../../../templete';\r\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, AreaSeries} from 'react-vis';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nclass MyArea extends Component\r\n{\r\n\r\n  renderArea()\r\n  {\r\n    const data = [\r\n      {x: 0, y: 3},\r\n      {x: 1, y: 5},\r\n      {x: 2, y: 9},\r\n      {x: 3, y: 12},\r\n      {x: 4, y: 10},\r\n      {x: 5, y: 4},\r\n      {x: 6, y: 6},\r\n      {x: 7, y: 4},\r\n      {x: 8, y: 1},\r\n      {x: 9, y: 9},\r\n      {x: 10, y: 14},\r\n      {x: 11, y: 15},\r\n      {x: 12, y: 10},\r\n      {x: 13, y: 8},\r\n      {x: 14, y: 2},\r\n      {x: 15, y: 10}\r\n    ];\r\n    return (\r\n      <div className = \"area-display\">\r\n        <XYPlot margin={{Bottom: 20, top: 30}} height={700} width= {800} yDomain={[0, 18]}>\r\n          <VerticalGridLines />\r\n          <HorizontalGridLines />\r\n          <XAxis />\r\n          <YAxis />\r\n          <AreaSeries curve=\"curveMonotoneX\" data={data} color=\"#cd3b54\"/>\r\n        </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n  render()\r\n  {\r\n    let output = this.renderArea();\r\n    let myName = \"Area\";\r\n    let string = `\r\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines,AreaSeries} from 'react-vis';\r\n\r\n    const data = [\r\n      {x: 0, y: 8},\r\n      {x: 1, y: 5},\r\n      {x: 2, y: 4},\r\n      {x: 3, y: 9},\r\n      {x: 4, y: 1},\r\n      {x: 5, y: 7},\r\n      {x: 6, y: 6},\r\n      {x: 7, y: 3},\r\n      {x: 8, y: 2},\r\n      {x: 9, y: 0}\r\n    ];\r\n    return (\r\n      <div>\r\n        <XYPlot height={500} width= {500}>\r\n          <VerticalGridLines />\r\n          <HorizontalGridLines />\r\n          <XAxis />\r\n          <YAxis />\r\n          <AreaSeries data={data} color=\"rgb(18, 147, 154)\"/>\r\n        </XYPlot>\r\n      </div>\r\n    );\r\n\r\n    `;\r\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n    return(\r\n      <div>\r\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyArea;\r\n","import React, { Component } from 'react';\r\nimport MyTemplete  from '../../../templete';\r\nimport {RadialChart} from 'react-vis';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\nclass MyPie extends Component\r\n{\r\n\r\n  renderPie()\r\n  {\r\n    const myData = [\r\n    {angle: 1, label: '1'},\r\n    {angle: 2, label: '2'},\r\n    {angle: 3, label: '3'},\r\n    {angle: 4, label: '4'},\r\n    {angle: 5, label: '5'},\r\n    {angle: 6, label: '6'}\r\n  ]\r\n    return (\r\n      <div className = \"pie-display\">\r\n        <RadialChart data={myData} width={500} height={600} showLabels/>\r\n      </div>\r\n    );\r\n  }\r\n  render()\r\n  {\r\n    let output = this.renderPie();\r\n    let myName = \"Pie\";\r\n    let string = `\r\n    import {RadialChart} from 'react-vis';\r\n\r\n    const myData = [\r\n    {angle: 1, label: 'Type 1'},\r\n    {angle: 2, label: 'Type 2'},\r\n    {angle: 3, label: 'Type 3'},\r\n    {angle: 4, label: 'Type 4'},\r\n    {angle: 5, label: 'Type 5'},\r\n    {angle: 6, label: 'Type 6'}\r\n    ]\r\n    return (\r\n      <div>\r\n        <RadialChart data={myData} width={500} height={600} showLabels/>\r\n      </div>\r\n    );  `;\r\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n    return(\r\n      <div>\r\n      <MyTemplete content = {output} name = {myName} sampleUsage={code}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyPie;\r\n","import React, { Component } from 'react';\r\nimport MyTemplete  from '../../../templete';\r\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, MarkSeries} from 'react-vis';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nclass MyScatterplot extends Component\r\n{\r\n\r\n  renderScatterplot()\r\n  {\r\n    const data = [\r\n      {x: 0, y: 8, size: 12},\r\n      {x: 1, y: 5, size: 10},\r\n      {x: 2, y: 4, size: 5},\r\n      {x: 2, y: 1, size: 10},\r\n      {x: 3, y: 9, size: 5},\r\n      {x: 4, y: 1, size: 10},\r\n      {x: 4, y: 4, size: 15},\r\n      {x: 5, y: 7, size: 10},\r\n      {x: 6, y: 6, size: 10},\r\n      {x: 7, y: 3, size: 5},\r\n      {x: 8, y: 2, size: 10},\r\n      {x: 8, y: 6, size: 5},\r\n      {x: 9, y: 8, size: 12},\r\n      {x: 10, y: 0, size: 5},\r\n      {x: 10, y: 5, size: 10},\r\n      {x: 3, y: 3, size: 5},\r\n      {x: 6, y: 10, size: 15},\r\n      {x: 0, y: 2, size: 5}\r\n    ];\r\n    return (\r\n      <div className = \"scatterplot-display\">\r\n        <XYPlot margin={{Bottom: 20, top: 30}} height={700} width= {700}>\r\n          <VerticalGridLines />\r\n          <HorizontalGridLines />\r\n          <XAxis />\r\n          <YAxis />\r\n          <MarkSeries data={data} sizeRange={[5, 15]}/>\r\n        </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n  render()\r\n  {\r\n    let output = this.renderScatterplot();\r\n    let myName = \"Scatterplot\";\r\n    let string = `\r\n    import {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, MarkSeries} from 'react-vis';\r\n\r\n    const data = [\r\n      {x: 0, y: 8, size: 15},\r\n      {x: 1, y: 5, size: 10},\r\n      {x: 2, y: 4, size: 5},\r\n      {x: 3, y: 9, size: 5},\r\n      {x: 4, y: 1, size: 10},\r\n      {x: 5, y: 7, size: 10},\r\n      {x: 6, y: 6, size: 10},\r\n      {x: 7, y: 3, size: 5},\r\n    ];\r\n    return (\r\n      <div>\r\n        <XYPlot height={500} width= {500}>\r\n          <VerticalGridLines />\r\n          <HorizontalGridLines />\r\n          <XAxis />\r\n          <YAxis />\r\n          <MarkSeries data={data} sizeRange={[5, 15]}/>\r\n        </XYPlot>\r\n      </div>\r\n    ); `;\r\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n    return(\r\n      <div>\r\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyScatterplot;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined'\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MyTemplete  from '../../../templete';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\n\r\nclass MyAvatar extends React.Component\r\n{\r\n  renderAvatar()\r\n  {\r\n    return(\r\n      <div className='avatar-list'>\r\n          <span className = \"row1\"> <h1><b>External Images</b></h1></span>\r\n          <div className = \"avatar-display\">\r\n            <Avatar\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwH6DalS_KpcvdezZT-tymCO2Spog0pW1g8ySWMhAPAohnxKNJ\"\r\n            />\r\n            <Avatar\r\n            src=\"https://image.flaticon.com/icons/png/512/146/146018.png\"\r\n            />\r\n            <Avatar\r\n            src=\"https://midreshetrachel.com/wp-content/uploads/2014/10/flat-faces-icons-circle-16.png\"\r\n            />\r\n          </div>\r\n\r\n\r\n           <h1 className = \"row\"><b>Svg Icons</b></h1>\r\n            <div className = \"avatar-display\">\r\n                <Avatar style={{backgroundColor: '#8abc89'}}>\r\n                  <FolderIcon/>\r\n                </Avatar>  \r\n                <Avatar style={{backgroundColor: '#4caf50'}}>\r\n                  <DeleteOutlinedIcon/>\r\n                </Avatar>\r\n                <Avatar style={{backgroundColor: '#F01F6C'}}>\r\n                  <MailIcon/>\r\n                </Avatar>\r\n            </div>\r\n\r\n\r\n          <h1 className = \"row\"><b>Letters</b></h1>\r\n          <div className = \"avatar-display\">\r\n              <Avatar \r\n              src=\"https://cdn0.iconfinder.com/data/icons/mobile-device/512/w-letter-uppercase-text-round-latin-keyboard-2-512.png\" \r\n              /> \r\n              <Avatar \r\n              src=\"https://cdn.pixabay.com/photo/2012/04/24/12/46/letter-39873_960_720.png\"\r\n              />\r\n              <Avatar \r\n              src=\"https://cdn4.iconfinder.com/data/icons/alphabet-3/500/ABC_alphabet_letter_font_graphic_language_text_L-512.png\"\r\n              />\r\n          </div>\r\n\r\n       </div>\r\n    );\r\n  }\r\n\r\n  render()\r\n  {\r\n    let output = this.renderAvatar();\r\n    let myName = \"Avatar\";\r\n    let string = `\r\n\r\n    import Avatar from '@material-ui/core/Avatar';\r\n\r\n     <div>\r\n       <Avatar\r\n           src=\"your link\"\r\n       />\r\n       <Avatar>\r\n         <Your Icon>\r\n       </Avatar>\r\n       <Avatar>\r\n         Your Text\r\n       </Avatar>\r\n     </div>`;\r\n\r\n    let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n    return(\r\n      <div>\r\n      <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default MyAvatar;\r\n","import MyTemplete  from '../../../templete';\r\nimport CodeBlock from '../../../';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport React from 'react';\r\n\r\nclass MyMarkdown extends React.Component\r\n{\r\n  buildString (){\r\n\r\n    let text =   `\r\n        import Badge from '@material-ui/core/Badge';\r\n        import MailIcon from '@material-ui/icons/Mail';\r\n\r\n        <React.Fragment>\r\n          <Badge className={classes.margin} badgeContent={99} color=\"primary\">\r\n            <MailIcon />\r\n            </Badge>\r\n          <Badge className={classes.margin} badgeContent={100} color=\"primary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </React.Fragment>\r\n       `;\r\n    return text;\r\n  }\r\n\r\n  renderMarkdown()\r\n  {\r\n    let string = this.buildString();\r\n\r\n    let rendered = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n\r\n    return rendered;\r\n  }\r\n\r\n  render()\r\n  {\r\n\r\n      let myName = \"Markdown\";\r\n      let output = this.renderMarkdown();\r\n      let sign = \"`\";\r\n      let string = `\r\n      import ReactMarkdown from 'react-markdown';\r\n      import React from 'react';\r\n      import CodeBlock from 'your path';\r\n\r\n      let string = ${sign}${this.buildString()}${sign}\r\n\r\n      let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n\r\n      return(\r\n        {code}\r\n      ); `;\r\n\r\n      let code = (<ReactMarkdown source={string} renderers={{ code: CodeBlock }}/>);\r\n      return(\r\n        <div>\r\n        <MyTemplete content = {output} name = {myName} sampleUsage = {code}/>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default MyMarkdown\r\n","import Action from \"../ActionID/actionID.js\";\r\n\r\nconst LeftMenuOpen = () =>{\r\n  return{\r\n    type: Action.SHOW_LEFT_MENU\r\n  };\r\n};\r\n\r\nexport default {LeftMenuOpen};\r\n","import React  from 'react';\r\nimport { Route, Switch, HashRouter} from 'react-router-dom';\r\nimport Header  from './header';\r\nimport \"../../node_modules/react-vis/dist/style.css\";\r\nimport MyColor from '../components/contentlist/Colors/colors.js';\r\nimport MyIconography from '../components/contentlist/Iconography/iconograpy.js';\r\nimport MyHome from '../components/contentlist/Home/home.js';\r\nimport Error from '../components/contentlist/Error/error.js';\r\nimport MyButtons from '../components/contentlist/Components/Buttons/buttons.js';\r\nimport MyTables from '../components/contentlist/Components/Tables/tables.js';\r\nimport MySpinner from '../components/contentlist/Components/Spinner/spinner.js';\r\nimport MyProgress from '../components/contentlist/Components/Progress/progress.js';\r\nimport MyMessageBar from '../components/contentlist/Components/MessageBar/messageBar.js';\r\nimport MyDialog from '../components/contentlist/Components/Dialog/dialog.js';\r\nimport MyNotification from '../components/contentlist/Components/Notification/notification.js';\r\nimport MySearchField from '../components/contentlist/Components/SearchField/searchField.js';\r\nimport MyLine from '../components/contentlist/Charts/Line/line.js';\r\nimport MyCircularGridLine from'../components/contentlist/Charts/CircularGridLine/circularGridLine.js';\r\nimport MyVerticalBar from '../components/contentlist/Charts/VerticalBar/verticalBar.js';\r\nimport MyArea from '../components/contentlist/Charts/Area/area.js';\r\nimport MyPie from '../components/contentlist/Charts/Pie/pie.js';\r\nimport MyScatterplot from '../components/contentlist/Charts/Scatterplot/scatterplot.js';\r\nimport MyAvatar from '../components/contentlist/Components/Avatar/avatar.js';\r\nimport MyMarkdown from '../components/contentlist/Components/Markdown/markdown.js';\r\nimport {connect} from 'react-redux';\r\nimport AppAction from '../actions/AppAction/appAction.js'\r\n\r\nclass App extends React.Component\r\n{\r\n  handleNavOpen = () =>{\r\n    this.props.leftMenuOpen();\r\n  };\r\n\r\n  render()\r\n  {\r\n    return(\r\n       <HashRouter >\r\n      <div className= 'App' >\r\n         <div>\r\n         <Header SideBarOpen={this.handleNavOpen} listOpenState = {this.props.leftOpen}/>\r\n         </div>\r\n\r\n         <div className = {this.props.leftOpen ? \"move-right\" : \"default\"}>\r\n             <div className = \"content\">\r\n             <Switch>\r\n             <Route path = \"/\" component = {MyHome}  key = \"/home\" exact/>\r\n             <Route path = \"/my-app\" component = {MyHome} key = \"/my-app\" exact/>\r\n             <Route path = \"/colors\" component = {MyColor} key = \"/colors\"/>\r\n             <Route path = \"/icons\" component = {MyIconography} key = \"/icons\"/>\r\n             <Route path = \"/components/button\" component = {MyButtons} key = \"/components/button\"/>\r\n             <Route path = \"/components/table\" component = {MyTables} key = \"/components/table\"/>\r\n             <Route path = \"/components/spinner\" component = {MySpinner} key = \"/components/spinner\"/>\r\n             <Route path = \"/components/progress\" component = {MyProgress} key = \"/components/progress\"/>\r\n             <Route path = \"/components/messagebar\" component = {MyMessageBar} key = \"/components/messagebar\"/>\r\n             <Route path = \"/components/dialog\" component = {MyDialog} key = \"/components/dialog\"/>\r\n             <Route path = \"/components/notification\" component = {MyNotification} key = \"/components/notification\"/>\r\n             <Route path = \"/components/avatar\" component = {MyAvatar} key = \"/components/avatar\"/>\r\n             <Route path = \"/components/searchfield\" component = {MySearchField} key = \"/components/searchfield\"/>\r\n             <Route path = \"/components/markdown\" component = {MyMarkdown} key = \"/components/markdown\"/>\r\n             <Route path = \"/charts/line\" component = {MyLine} key = \"/charts/line\"/>\r\n             <Route path = \"/charts/circulargridline\" component = {MyCircularGridLine} key = \"/charts/circulargridline\"/>\r\n             <Route path = \"/charts/verticalbar\" component = {MyVerticalBar} key = \"/charts/verticalbar\"/>\r\n             <Route path = \"/charts/area\" component = {MyArea} key = \"/charts/area\"/>\r\n             <Route path = \"/charts/pie\" component = {MyPie} key = \"/charts/pie\"/>\r\n             <Route path = \"/charts/scatterplot\" component = {MyScatterplot} key = \"/charts/scatterplot\"/>\r\n             <Route  component = {Error} key = \"error\"/>\r\n             </Switch>\r\n             </div>\r\n         </div>\r\n      </div>\r\n      </HashRouter>\r\n\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    leftOpen: state.appReducer.leftOpen,\r\n    data: state.appReducer.data\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) =>{\r\n  return{\r\n    leftMenuOpen: () => {dispatch(AppAction.LeftMenuOpen())},\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchtoProps)(App);\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/*\r\nContain information to render left menu,\r\nincluding name (label), redirect link(url), and icon name(icon)\r\n\r\nContain information to render right menu,\r\nincluding name (label) and redirect link(url)\r\n*/\r\n\r\nconst BASE_URL = '/';\r\n\r\nconst navItems = [\r\n    {\r\n      label: 'Home',\r\n      url: BASE_URL,\r\n      icon: 'Home'\r\n\r\n    },\r\n    {\r\n      label: 'Colors',\r\n      url: BASE_URL + 'colors',\r\n      icon: 'Palette'\r\n\r\n    },\r\n    {\r\n      label: 'Components',\r\n      url: BASE_URL + 'components',\r\n      icon: 'Widgets',\r\n      subNavItems: [\r\n        {\r\n          label: 'Avatar',\r\n          url: BASE_URL + 'components/avatar',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n        {\r\n          label: 'Button',\r\n          url: BASE_URL + 'components/button',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n        {\r\n          label: 'Dialog',\r\n          url: BASE_URL + 'components/dialog',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n        {\r\n          label: 'Markdown',\r\n          url: BASE_URL + 'components/markdown',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n        {\r\n          label: 'Notification',\r\n          url: BASE_URL + 'components/notification',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n        {\r\n          label: 'Progress',\r\n          url: BASE_URL + 'components/progress',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n        {\r\n          label: 'Search Field',\r\n          url: BASE_URL + 'components/searchfield',\r\n          icon: 'NavigateNext'\r\n        },\r\n        {\r\n          label: 'Spinner',\r\n          url: BASE_URL + 'components/spinner',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n        {\r\n          label: 'Table',\r\n          url: BASE_URL + 'components/table',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      label: 'Charts',\r\n      url: BASE_URL + 'charts',\r\n      icon: 'Timeline',\r\n      subNavItems: [\r\n        {\r\n          label: 'Area',\r\n          url: BASE_URL + 'charts/area',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n        {\r\n          label: 'Circular Grid Line',\r\n          url: BASE_URL + 'charts/circulargridline',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n        {\r\n          label: 'Line',\r\n          url: BASE_URL + 'charts/line',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n        {\r\n          label: 'Pie',\r\n          url: BASE_URL + 'charts/pie',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n        {\r\n          label: 'Scatter Plot',\r\n          url: BASE_URL + 'charts/scatterplot',\r\n          icon: 'NavigateNext'\r\n\r\n        },\r\n        {\r\n          label: 'Vertical Bar',\r\n          url: BASE_URL + 'charts/verticalbar',\r\n          icon: 'NavigateNext'\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      label: 'Iconography',\r\n      url: BASE_URL + 'icons',\r\n      icon: 'BlurOn'\r\n\r\n    }\r\n];\r\n\r\nconst rightMenu = [\r\n  {\r\n    label: 'Material-UI',\r\n    link: 'https://material-ui.com/'\r\n  },\r\n  {\r\n    label: 'React',\r\n    link: 'https://reactjs.org/'\r\n  },\r\n  {\r\n    label: 'React-Vis',\r\n    link: 'https://github.com/uber/react-vis'\r\n  },\r\n];\r\n\r\n\r\nexport default {navItems,rightMenu}\r\n","/*\r\nReducer:\r\n\r\nHandle actions when right menu need to be toggled\r\n\r\nReturn data to be rendered in right menu\r\n\r\n*/\r\n\r\nimport Data from \"./data.js\";\r\nimport Action from \"../actions/ActionID/actionID.js\";\r\n\r\nconst initState = {\r\n  anchorEl : null,\r\n  rightContent: Data.rightMenu\r\n}\r\n\r\nconst headerReducer = (state = initState, action) => {\r\n  //console.log(state);\r\n  if(action.type === Action.SHOW_RIGHT_MENU)\r\n  {\r\n    return{\r\n      ...state,\r\n      anchorEl: action.event.currentTarget\r\n    }\r\n  }\r\n  else if(action.type === Action.CLOSE_RIGHT_MENU)\r\n  {\r\n    return{\r\n      ...state,\r\n      anchorEl: null\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default headerReducer;\r\n","/*\r\nHandle actions when left menu needs to be toggled\r\n*/\r\n\r\nimport Action from \"../actions/ActionID/actionID.js\";\r\n\r\nconst initState = {\r\n  leftOpen : false,\r\n}\r\n\r\nconst appReducer = (state = initState, action) =>{\r\n  if(action.type === Action.SHOW_LEFT_MENU)\r\n  {\r\n    return{\r\n      ...state,\r\n      leftOpen: !state.leftOpen\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default appReducer;\r\n","import Data from \"./data.js\";\r\nimport Action from \"../actions/ActionID/actionID.js\";\r\n\r\nconst initState = {\r\n  data : Data.navItems,\r\n  value: 0,\r\n  event: null\r\n}\r\n\r\nconst navReducer = (state = initState, action) =>{\r\n  if(action.type === Action.SHOW_SUBLIST)\r\n  {\r\n      return{\r\n        ...state,\r\n        [action.oneState]:  !state[action.oneState]\r\n      }\r\n\r\n  }\r\n  else if(action.type === Action.SET_STATE)\r\n  {\r\n    if(action.bool && state[action.oneState] === undefined)\r\n    {\r\n      return{\r\n        ...state,\r\n        [action.oneState]:  action.bool\r\n      }\r\n    }\r\n  }\r\n  else if(action.type === Action.SWITCH_TABS)\r\n  {\r\n    return{\r\n      ...state,\r\n      value: action.value,\r\n      event: action.event\r\n    }\r\n  }\r\n  else if(action.type === Action.RESET_TABS_VALUE)\r\n  {\r\n    return{\r\n      ...state,\r\n      value: 0\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default navReducer;\r\n","/*\r\nThis is root reducer,\r\ncombining all children reducers.\r\n*/\r\n\r\nimport { combineReducers } from 'redux';\r\nimport headerReducer from \"./headerReducer.js\";\r\nimport appReducer from \"./appReducer.js\";\r\n//import templeteReducer from \"./templeteReducer.js\";\r\nimport navReducer from \"./navReducer.js\";\r\n\r\nconst rootReducer = combineReducers({\r\n  headerReducer,\r\n  appReducer,\r\n  //templeteReducer,\r\n  navReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore} from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers/rootReducer.js';\r\n\r\n\r\nconst store = createStore(rootReducer);\r\n\r\n\r\nReactDOM.render(<Provider store = {store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}